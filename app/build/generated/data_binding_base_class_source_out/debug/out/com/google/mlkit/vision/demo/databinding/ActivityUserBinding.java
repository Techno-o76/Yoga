// Generated by view binder compiler. Do not edit!
package com.google.mlkit.vision.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.mlkit.vision.demo.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView asanDescription;

  @NonNull
  public final TextView asanName;

  @NonNull
  public final Button back;

  @NonNull
  public final RelativeLayout relativeButton;

  @NonNull
  public final RelativeLayout relativeHouseNo;

  @NonNull
  public final RelativeLayout relativeName;

  @NonNull
  public final RelativeLayout relativePhone;

  @NonNull
  public final TextView scodeProfile;

  @NonNull
  public final Button start;

  @NonNull
  public final TextView time;

  @NonNull
  public final CircleImageView yogaImage;

  private ActivityUserBinding(@NonNull RelativeLayout rootView, @NonNull TextView asanDescription,
      @NonNull TextView asanName, @NonNull Button back, @NonNull RelativeLayout relativeButton,
      @NonNull RelativeLayout relativeHouseNo, @NonNull RelativeLayout relativeName,
      @NonNull RelativeLayout relativePhone, @NonNull TextView scodeProfile, @NonNull Button start,
      @NonNull TextView time, @NonNull CircleImageView yogaImage) {
    this.rootView = rootView;
    this.asanDescription = asanDescription;
    this.asanName = asanName;
    this.back = back;
    this.relativeButton = relativeButton;
    this.relativeHouseNo = relativeHouseNo;
    this.relativeName = relativeName;
    this.relativePhone = relativePhone;
    this.scodeProfile = scodeProfile;
    this.start = start;
    this.time = time;
    this.yogaImage = yogaImage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.asan_description;
      TextView asanDescription = ViewBindings.findChildViewById(rootView, id);
      if (asanDescription == null) {
        break missingId;
      }

      id = R.id.asan_name;
      TextView asanName = ViewBindings.findChildViewById(rootView, id);
      if (asanName == null) {
        break missingId;
      }

      id = R.id.back;
      Button back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.relative_button;
      RelativeLayout relativeButton = ViewBindings.findChildViewById(rootView, id);
      if (relativeButton == null) {
        break missingId;
      }

      id = R.id.relative_house_no;
      RelativeLayout relativeHouseNo = ViewBindings.findChildViewById(rootView, id);
      if (relativeHouseNo == null) {
        break missingId;
      }

      id = R.id.relative_name;
      RelativeLayout relativeName = ViewBindings.findChildViewById(rootView, id);
      if (relativeName == null) {
        break missingId;
      }

      id = R.id.relative_phone;
      RelativeLayout relativePhone = ViewBindings.findChildViewById(rootView, id);
      if (relativePhone == null) {
        break missingId;
      }

      id = R.id.scode_profile;
      TextView scodeProfile = ViewBindings.findChildViewById(rootView, id);
      if (scodeProfile == null) {
        break missingId;
      }

      id = R.id.start;
      Button start = ViewBindings.findChildViewById(rootView, id);
      if (start == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.yoga_image;
      CircleImageView yogaImage = ViewBindings.findChildViewById(rootView, id);
      if (yogaImage == null) {
        break missingId;
      }

      return new ActivityUserBinding((RelativeLayout) rootView, asanDescription, asanName, back,
          relativeButton, relativeHouseNo, relativeName, relativePhone, scodeProfile, start, time,
          yogaImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
